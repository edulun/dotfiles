filetype off
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()

" let Vundle manage Vundle, required
Plugin 'VundleVim/Vundle.vim'

" Setting colorschemes
Plugin 'flazz/vim-colorschemes'

" Sensible defaults
Plugin 'tpope/vim-sensible'

" Status / tabline
Plugin 'bling/vim-airline'

" Quick commenting code <>cc
Plugin 'scrooloose/nerdcommenter'

Plugin 'terryma/vim-multiple-cursors'

Plugin 'w0rp/ale'

" File navigation
" <c-t>, <c-v>, <c-x> to open the selected entry in a new tab or in a new split.
Plugin 'junegunn/fzf'

" Highlight EOL whitespace
Plugin 'bronson/vim-trailing-whitespace'

" Git wrapper
Plugin 'tpope/vim-fugitive'

" Navigation
Plugin 'tpope/vim-vinegar'

 "Bracketed pasting, so pasting code doesn't mess up the indentation.
Plugin 'conradirwin/vim-bracketed-paste'

Plugin 'tpope/vim-surround'

" 2-character search motion (s/S).
Plugin 'justinmk/vim-sneak'

" https://github.com/airblade/vim-gitgutter
Plugin 'airblade/vim-gitgutter'

""" Language specific plugins
Plugin 'pangloss/vim-javascript'
Plugin 'mxw/vim-jsx'
Plugin 'styled-components/vim-styled-components'

" Highlight enclosing tagas
Plugin 'Valloric/MatchTagAlways'

" Always autoclose HTML tags
Plugin 'alvan/vim-closetag'

" Displays indentation levels
Plugin 'Yggdroot/indentline'

call vundle#end()

set splitbelow
set splitright

set lazyredraw
colorscheme gruvbox
set background=dark

" 1 tab == 2 spaces
set expandtab
set shiftwidth=2
set tabstop=2
" Linebreak on 500 characters
set lbr
set tw=500
set si "Smart indent
set wrap "Wrap lines
set colorcolumn=80

set nobackup
set noswapfile
set undofile
set undodir=~/.vim/undos

set ignorecase
set smartcase
set hlsearch
set relativenumber

set wildignore+=*/tmp/*,*.so,*.swp,*.class,*.zip,*/dist/*,*/node_modules/*,*/reports/*,*/bower_components/*,*/test/fixtures/*,*/build/*

set statusline=%f
set statusline+=\ %h%w%m%r
set statusline+=%=
set statusline+=%-16(%{exists('g:loaded_fugitive')?fugitive#statusline():''}\%)
set statusline+=\ %P/%L

inoremap jk <esc>
inoremap kj <esc>

noremap <S-K> kJ

xnoremap <Tab> >gv
xnoremap <S-Tab> <gv

noremap <leader>p "+p
noremap <leader>y "+y

"Toggle lineNumber
set number

set foldmethod=syntax
set foldlevel=99

let g:indentLine_char = '|'
let g:indentLine_color_term = 242

let g:closetag_filenames = "*.html,*.xhtml,*.phtml,*.erb,*.jsx,*.js,*.vue"
let g:closetag_xhtml_filenames = '*.xhtml,*.jsx,*.erb,*.vue'
let g:closetag_emptyTags_caseSensitive = 1

let g:mta_filetypes = {
    \ 'html' : 1,
    \ 'xhtml' : 1,
    \ 'xml' : 1,
    \ 'javascript.jsx' : 1,
    \ 'js' : 1,
    \ 'jinja' : 1,
    \}

let g:ale_fixers= {}
let g:ale_fixers['javascript'] = ['prettier']
let g:ale_fix_on_save = 1

let mapleader = "\<Space>"
nnoremap <Leader>l :set invnumber<CR>
noremap <leader>h :wincmd s<CR>
noremap <leader>v :wincmd v<CR>
noremap <leader>w :w<CR>
noremap <leader>p @p
noremap <c-p> :FZF<CR>

"JOIN 2 blocks :1,g/^/''+m.|-j!
