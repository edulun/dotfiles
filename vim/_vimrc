filetype off

set rtp+=~/.vim/bundle/Vundle.vim
set runtimepath+=~/.vim/bundle/Vundle.vim
call vundle#begin()

" let Vundle manage Vundle, required
Plugin 'VundleVim/Vundle.vim'

" Setting colorschemes
Plugin 'flazz/vim-colorschemes'

" Decent defaults
Plugin 'tpope/vim-sensible'

" Status/ tabline
Plugin 'bling/vim-airline'

" Quick commenting code <>cc
Plugin 'scrooloose/nerdcommenter'


" File navigation
" <F5> - refresh
" <c-f>, <c-b>  - cycle modes
" <c-t>, <c-v>, <c-x> to open the selected entry in a new tab or in a new split.
" <c-n>, <c-p> to select the next/previous string in the prompt's history.
" <c-y> new file
" <c-z> mark/unmark multiple files and <c-o> to open them.
Plugin 'ctrlpvim/ctrlp.vim'

" Highlight EOL whitespace
Plugin 'bronson/vim-trailing-whitespace'

" Git wrapper
Plugin 'tpope/vim-fugitive'

" Navigation
Plugin 'tpope/vim-vinegar'

" Syntax checker
Plugin 'scrooloose/syntastic'

"" For custom text objects, needed for all vim-textobj plugins.
"Plug 'kana/vim-textobj-user'

"" Variable (CamelCase or underscore) segment text object (iv / av).
"Plug 'Julian/vim-textobj-variable-segment'

"" Comment text object (ic / ac / aC)
"Plug 'glts/vim-textobj-comment'

"" Entire buffer text object (ie / ae).
"Plug 'kana/vim-textobj-entire'

"" HTML/XML attribute text object (ix / ax).
"Plug 'whatyouhide/vim-textobj-xmlattr'

"" Indent-level text object (ai / ii / aI / iI)
"Plug 'michaeljsmith/vim-indent-object'

 "Bracketed pasting, so pasting code doesn't mess up the indentation.
Plugin 'conradirwin/vim-bracketed-paste'

Plugin 'bkad/CamelCaseMotion'

Plugin 'tpope/vim-surround'

Plugin 'Townk/vim-autoclose'

" 2-character search motion (s/S).
Plugin 'justinmk/vim-sneak'

" https://github.com/airblade/vim-gitgutter
Plugin 'airblade/vim-gitgutter'

Plugin 'mhinz/vim-startify'

""" Language specific plugins
Plugin 'rust-lang/rust.vim'

Plugin 'pangloss/vim-javascript'
Plugin 'mxw/vim-jsx'


Plugin 'Yggdroot/indentline'

call vundle#end()

set cursorline

colorscheme Monokai
set splitbelow
set splitright

highlight Visual ctermfg=233 ctermbg=67 guifg=#1b1d1e guibg=#465457

" 1 tab == 2 spaces
set expandtab
set shiftwidth=2
set tabstop=2

set lazyredraw

" Linebreak on 500 characters
set lbr
set tw=500

set si "Smart indent
set wrap "Wrap lines


set nobackup
set directory=~/.vim/swaps
set undofile
set undodir=~/.vim/undos

set ignorecase
set smartcase

set wildignore+=*/tmp/*,*.so,*.swp,*.zip,*/dist/*,*/node_modules/*,*/reports/*,*/bower_components/*

set statusline+=%#warningmsg#
set statusline+=%{SyntasticStatuslineFlag()}
set statusline+=%*

" Enable transparency
hi Normal ctermbg=none

let g:syntastic_always_populate_loc_list = 1
let g:syntastic_auto_loc_list = 1
let g:syntastic_check_on_open = 1
let g:syntastic_check_on_wq = 0

let g:airline#extensions#tabline#enabled = 1
let g:airline#extensions#tabline#fnamemod = ':t'

let g:jsx_ext_required = 0

let g:indentLine_char = '|'
let g:indentLine_color_term = 242

let mapleader = "\<Space>"

let g:startify_bookmarks = ['~/.vimrc', '~/dev']

inoremap jk <esc>
inoremap kj <esc>
inoremap jk <esc>
inoremap kj <esc>

nnoremap j gj
nnoremap k gk

xnoremap <Tab> >gv
xnoremap <S-Tab> <gv

" " Copy to clipboard
xnoremap <leader>d "+d
xnoremap <leader>y "+y
xnoremap <leader>p "+p
xnoremap <leader>P "+P
vnoremap  <leader>y  "+y
nnoremap  <leader>Y  "+yg_
nnoremap  <leader>y  "+y
nnoremap  <leader>yy  "+yy

" " Paste from clipboard
nnoremap <leader>p "+p
nnoremap <leader>P "+P
vnoremap <leader>p "+p
vnoremap <leader>P "+P

"Toggle lineNumber
set number
nnoremap <Leader>l :set invnumber<CR>

"Toggle search highlight
let hlstate=1
nnoremap <Leader>k :if (hlstate == 0) \| nohlsearch \| else \| set hlsearch \| endif \| let hlstate=1-hlstate<cr>

  call camelcasemotion#CreateMotionMappings('<leader>')

